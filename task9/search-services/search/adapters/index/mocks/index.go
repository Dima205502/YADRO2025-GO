// Code generated by MockGen. DO NOT EDIT.
// Source: yadro.com/course/search/core (interfaces: Builder)
//
// Generated by this command:
//
//	mockgen -package mock_index -destination ./mocks/index.go yadro.com/course/search/core Builder
//

// Package mock_index is a generated GoMock package.
package mock_index

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
	core "yadro.com/course/search/core"
)

// MockBuilder is a mock of Builder interface.
type MockBuilder struct {
	ctrl     *gomock.Controller
	recorder *MockBuilderMockRecorder
	isgomock struct{}
}

// MockBuilderMockRecorder is the mock recorder for MockBuilder.
type MockBuilderMockRecorder struct {
	mock *MockBuilder
}

// NewMockBuilder creates a new mock instance.
func NewMockBuilder(ctrl *gomock.Controller) *MockBuilder {
	mock := &MockBuilder{ctrl: ctrl}
	mock.recorder = &MockBuilderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBuilder) EXPECT() *MockBuilderMockRecorder {
	return m.recorder
}

// BuildIndex mocks base method.
func (m *MockBuilder) BuildIndex(arg0 context.Context) (map[string][]int, map[int]core.Comics, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BuildIndex", arg0)
	ret0, _ := ret[0].(map[string][]int)
	ret1, _ := ret[1].(map[int]core.Comics)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// BuildIndex indicates an expected call of BuildIndex.
func (mr *MockBuilderMockRecorder) BuildIndex(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BuildIndex", reflect.TypeOf((*MockBuilder)(nil).BuildIndex), arg0)
}
